name: Publish Linux

on:
  workflow_dispatch:
    inputs:
      build-image-sha:
        type: string
        description: 'SHA for electron/build image'
        default: '424eedbf277ad9749ffa9219068aa72ed4a5e373'
      upload-to-storage:
        description: 'Uploads to Azure storage'
        required: false
        default: '1'
        type: string
      run-linux-publish:
        description: 'Run the publish jobs vs just the build jobs'
        type: boolean
        default: false

jobs:
  checkout-linux:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/electron/build:${{ inputs.build-image-sha }}
      options: --user root --privileged
      volumes:
        - /mnt/cross-instance-cache:/mnt/cross-instance-cache
        # corresponds to method1
        - /mnt/workdir_tmp:/__w/electron_no_sandbox
        - /home/runner/work:/__w_ori
        # # corresponds to method2
        # - /mnt/workdir_tmp:/mnt/workdir_tmp
        - /var/run/sas:/var/run/sas
    env:
      CHROMIUM_GIT_COOKIE: ${{ secrets.CHROMIUM_GIT_COOKIE }}
      GCLIENT_EXTRA_ARGS: '--custom-var=checkout_arm=True --custom-var=checkout_arm64=True'
    steps:
    # method1: link to correct place outside docker, but not in docker
    - run: |
        mkdir -p /__w/electron_no_sandbox/electron_no_sandbox
        mkdir -p /__w_ori/electron_no_sandbox/electron_no_sandbox
        #mv /__w_ori/electron_no_sandbox/electron_no_sandbox/{,.[^.]}* /__w/electron_no_sandbox/electron_no_sandbox
        find /__w_ori/electron_no_sandbox/electron_no_sandbox -mindepth 1 -maxdepth 1 -exec mv -t /__w/electron_no_sandbox/electron_no_sandbox -- {} +
        rm -rf /__w_ori/electron_no_sandbox/electron_no_sandbox/src
        ln -sf /mnt/workdir_tmp/electron_no_sandbox/src /__w_ori/electron_no_sandbox/electron_no_sandbox/src
    # method2: link to correct place both outside docker AND in docker (that makes tar not happy)
    # - run: |
    #     mkdir -p /__w/electron_no_sandbox
    #     rm -rf /__w/electron_no_sandbox/electron_no_sandbox
    #     ln -sf /mnt/workdir_tmp /__w/electron_no_sandbox/electron_no_sandbox
    - name: Checkout Electron
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        path: src/electron
        fetch-depth: 0
    - name: Checkout & Sync & Save
      uses: ./src/electron/.github/actions/checkout
      env:
        MISTY_SFTP_KEY: ${{secrets.MISTY_SFTP_KEY}}
        MISTY_SFTP_PORT: ${{secrets.MISTY_SFTP_PORT}}
        MISTY_SFTP_PATH: ${{secrets.MISTY_SFTP_PATH}}
        MISTY_RC_HOST: ${{secrets.MISTY_RC_HOST}}
        MISTY_RC_REMOTE: ${{secrets.MISTY_RC_REMOTE}}

  publish-x64:
    uses: ./.github/workflows/pipeline-segment-electron-build.yml
    needs: checkout-linux
    with:
      environment: production-release
      build-runs-on: ubuntu-latest
      build-container: '{"image":"ghcr.io/electron/build:${{ inputs.build-image-sha }}","options":"--user root","volumes":["/mnt:/mnt"]}'
      target-platform: linux
      target-arch: x64
      is-release: true
      gn-build-type: release
      generate-symbols: true
      strip-binaries: true
      upload-to-storage: ${{ inputs.upload-to-storage }}
    secrets: inherit

  # publish-arm:
  #   uses: ./.github/workflows/pipeline-segment-electron-build.yml
  #   needs: checkout-linux
  #   with:
  #     environment: production-release
  #     build-runs-on: ubuntu-latest
  #     build-container: '{"image":"ghcr.io/electron/build:${{ inputs.build-image-sha }}","options":"--user root","volumes":["/mnt/cross-instance-cache:/mnt/cross-instance-cache"]}'
  #     target-platform: linux
  #     target-arch: arm
  #     is-release: true
  #     gn-build-type: release
  #     generate-symbols: true
  #     strip-binaries: true
  #     upload-to-storage: ${{ inputs.upload-to-storage }}
  #   secrets: inherit

  # publish-arm64:
  #   uses: ./.github/workflows/pipeline-segment-electron-build.yml
  #   needs: checkout-linux
  #   with:
  #     environment: production-release
  #     build-runs-on: ubuntu-latest
  #     build-container: '{"image":"ghcr.io/electron/build:${{ inputs.build-image-sha }}","options":"--user root","volumes":["/mnt/cross-instance-cache:/mnt/cross-instance-cache"]}'
  #     target-platform: linux
  #     target-arch: arm64
  #     is-release: true
  #     gn-build-type: release
  #     generate-symbols: true
  #     strip-binaries: true
  #     upload-to-storage: ${{ inputs.upload-to-storage }}
  #   secrets: inherit
